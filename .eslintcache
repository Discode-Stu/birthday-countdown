[{"/Volumes/DStuartHD/Code/birthday-countdown/src/App.js":"1","/Volumes/DStuartHD/Code/birthday-countdown/src/Components/birthdayForm.js":"2","/Volumes/DStuartHD/Code/birthday-countdown/src/index.js":"3","/Volumes/DStuartHD/Code/birthday-countdown/src/reportWebVitals.js":"4","/Volumes/DStuartHD/Code/birthday-countdown/src/Components/clock.js":"5"},{"size":418,"mtime":1609292766636,"results":"6","hashOfConfig":"7"},{"size":2091,"mtime":1609296832665,"results":"8","hashOfConfig":"7"},{"size":501,"mtime":1607135748864,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1607116914799,"results":"10","hashOfConfig":"7"},{"size":4497,"mtime":1609298402748,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tve3c9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Volumes/DStuartHD/Code/birthday-countdown/src/App.js",[],["25","26"],"/Volumes/DStuartHD/Code/birthday-countdown/src/Components/birthdayForm.js",["27"],"import React, { useState } from 'react';\nimport Datepicker, {CalendarContainer} from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Clock from \"./clock\"\n\n\n\n\nconst RenderClock = () => {\n  const [startDate, setStartDate] = useState(new Date())\n  const [formCompleted, setFormCompleted] = useState(false)\n\n  const MyContainer = ({ className, children }) => {\n    return (\n      <div style={{ padding: \"16px\", background: \"#216ba5\", color: \"#fff\" }}>\n        <CalendarContainer className={className}>\n          <div style={{ background: \"#f0f0f0\" }}>\n          </div>\n          <div style={{ position: \"relative\" }}>{children}</div>\n        </CalendarContainer>\n      </div>\n    );\n  };\n\n  const handleChange = (date) => {\n    setStartDate(date)\n  }\n\n  const handleGenerate = () => {\n    setFormCompleted(true)\n  }\n\n  const handleChangeDate = () => {\n    setFormCompleted(false)\n  }\n\n  const clockRendered = \n    formCompleted \n    ? \n      <div>\n        <Clock birthdayFormState={startDate} formCompleted={formCompleted} /> \n        <a className='change-date' onClick={handleChangeDate} >Change Date</a>\n      </div>\n    : \n      <div>\n          <div className=\"datepicker-container\">\n            <Datepicker \n                selected={startDate} \n                onChange={handleChange} \n                // onChange={date => setStartDate(date)} \n                showTimeSelect \n                showTimeInput\n                timeFormat=\"HH:mm\"\n                timeIntervals={5}\n                timeCaption=\"time\"\n                dateFormat=\"MM/dd/yyyy h:mm aa\"\n                calendarContainer={MyContainer}\n                isClearable\n                placeholderText=\"What's your birthday?\"\n                // showMonthYearPicker\n                // showYearPicker\n            />\n        </div> \n      <button onClick={handleGenerate} style={{background: 'lightgreen' }}>Generate Countdown </button>\n    </div>\n    \n  return clockRendered\n}\n\nconst BirthdayForm = () => {\n  return ( \n    <div>\n      <RenderClock />\n    </div>\n  );\n}\nexport default BirthdayForm","/Volumes/DStuartHD/Code/birthday-countdown/src/index.js",[],"/Volumes/DStuartHD/Code/birthday-countdown/src/reportWebVitals.js",[],"/Volumes/DStuartHD/Code/birthday-countdown/src/Components/clock.js",["28","29"],"import React, {useState, useEffect} from 'react';\n\nconst getTimeRemaining = (birthday) => {\n  var bday = new Date(birthday);\n  var today = new Date();\n\n  const currentMonth = today.getMonth();\n  const birthMonth = bday.getMonth();\n\n  if(birthMonth > currentMonth) {\n    //1. month is after the current month\n    bday.setFullYear(today.getFullYear())\n  }\n  else if (birthMonth < currentMonth) {\n    //2. month is before the current month\n    const lesserMonth = today.getFullYear() + 1\n    console.log('lesserMonth', lesserMonth);\n    \n    bday.setFullYear(lesserMonth)\n  }\n  else if (birthMonth === currentMonth) {\n    const birthDay = bday.getDate()\n    const currentDay = today.getDate()\n\n    if(birthDay > currentDay) {\n      //1. month is after the current day\n      bday.setFullYear(today.getFullYear())\n    }\n    else if (birthDay < currentDay) {\n      //2. month is before the current day\n      const lesserDay = today.getFullYear() + 1\n      console.log('lesserday', lesserDay);\n      \n      bday.setFullYear(lesserDay)\n    }\n    else if (birthDay === currentDay) {\n      return 0\n    }\n  }\n\n\n  var distance = bday.getTime() - today.getTime();\n  // var distance = today.getTime() - bday.getTime() ;\n  // console.log('distance', distance)\n\n  const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n  return {\n    'days': days,\n    'hours': hours,\n    'minutes': minutes,\n    'seconds': seconds\n  }\n}\n\n\nconst Clock = (props) => {\n  const birthday = props.birthdayFormState.toString();\n\n  const [timeRemaining, setTimeRemaining] = useState(getTimeRemaining(birthday));\n\n  const noBirthYear = new Date(birthday).getFullYear() === new Date().getFullYear()\n\n\n  const getAge = (birthday) => {\n    var bday = new Date(birthday);\n    var bdayMonth = bday.getMonth()\n    var bdayDay = bday.getDate()\n\n    let today = new Date();\n    let todayDay = today.getDate()\n    let todayMonth = today.getMonth()\n\n    var distance = today.getTime() - bday.getTime();\n    var daysOld = Math.floor(distance / (1000 * 60 * 60 * 24));\n    var yearsOld = Number((daysOld/365).toFixed(0));\n\n    if (((bdayMonth > 5) && (bdayMonth != todayMonth)) || ((bdayMonth === todayMonth) && (bdayDay < todayDay))) {\n      return yearsOld + 1\n    } else {\n      return yearsOld;\n    }\n  }\n\n  // const [timer, setTimer] = useState(0)\n\n  useEffect(() => {\n    // const birthday = props.birthdayFormState.toString();\n    console.log('propsssss',props)\n    const timer = setInterval(() => {\n      // console.log('timerrrrr');\n      \n      const timeRemaining = getTimeRemaining(birthday);\n      setTimeRemaining(timeRemaining);\n    }, 1000);\n\n\n    props.formCompleted ? console.log('form complete!!!') : console.log('interval canceled!!!')\n    // props.formCompleted ? console.log('form complete!!!') : clearInterval(timer)\n    // if(props.formCompleted == false){\n    //   clearInterval(timer)\n    // }\n    return () => clearInterval(timer);\n  }, []);\n  // }, [birthday, props.formCompleted]);\n\n  console.log('timeRemaining',timeRemaining);\n  \n  console.log('birthdayyyy', props.birthdayFormState);\n\n  // useEffect(() => {\n    \n  //   return () => {\n  //     console.log(\"cleaned up\");\n  //   };\n  // }, []);\n\n  //mon Dec 07 2020 13:59:17 GMT-0500\n\n  const renderMessage = () => {\n\n    console.log('noBirthYear', noBirthYear);\n    \n    if(noBirthYear) {\n      return (\n        <h4>until your birthday!</h4>\n      )\n    } else {\n      return (\n        <h4>remaining until you are {(getAge(birthday))}</h4>\n      )\n    }\n\n  }\n\n  return (\n    <div className='countdown'>\n      {\n        timeRemaining === 0 ?\n          <div className='message-container'>\n            <p className=\"message-container__title\">Countdown Complete</p>\n            <p className=\"message-container__message\">HAPPY BIRTHDAY!!</p>\n          </div>\n\n        :\n        <div>\n          <div>\n            <ul className='countdown__clock'>\n              <li>DAYS <p>{timeRemaining.days}</p></li>\n              <li>HOURS <p>{timeRemaining.hours}</p></li>\n              <li>MINUTES <p>{timeRemaining.minutes}</p></li>\n              <li>SECONDS <p>{timeRemaining.seconds}</p></li>\n            </ul>\n          </div>\n          <div>\n            {renderMessage()}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Clock;\n\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":42,"column":9,"nodeType":"36","endLine":42,"endColumn":64},{"ruleId":"37","severity":1,"message":"38","line":81,"column":40,"nodeType":"39","messageId":"40","endLine":81,"endColumn":42},{"ruleId":"41","severity":1,"message":"42","line":107,"column":6,"nodeType":"43","endLine":107,"endColumn":8,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'birthday' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["47"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [birthday, props]",{"range":"50","text":"51"},[3138,3140],"[birthday, props]"]